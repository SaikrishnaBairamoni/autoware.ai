variables:
  VCS_FILE: autoware.ai.repos
  #CI_DEBUG_TRACE: "true"
  AUTOWARE_CROSS_TARGET_PLATFORM: generic-aarch64

.build: &build_common
  before_script:
    - sudo apt-get update
    # Use UTC for tzdata
    - DEBIAN_FRONTEND=noninteractive sudo apt-get install -y tzdata
    - sudo apt-get install -y gnupg2 lsb-release gcc g++ dpkg python-rosdep
    - sudo apt-get install -y python3-pip python3-setuptools python3-vcstool python3-colcon-common-extensions
    # Update setuptools from PyPI because the version Ubuntu ships with is too old
    - pip3 install -U setuptools
    - mkdir src
    - vcs validate < $VCS_FILE
    - vcs import src < $VCS_FILE
    - rosdep update
    - rosdep install -y --from-paths src --ignore-src --rosdistro ${ROS_DISTRO}
  script:
    # We first build the entire workspace normally
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - colcon build --cmake-args -DCMAKE_BUILD_TYPE=Debug
    # And then build the tests target. catkin (ROS1) packages add their tests to the tests target
    # which is not the standard target for CMake projects. We need to trigger the tests target so that
    # tests are built and any fixtures are set up.
    - colcon build --cmake-target tests --cmake-args -DCMAKE_BUILD_TYPE=Debug
    - colcon test
    - colcon test-result --verbose

.build_cross_vars: &build_cross_vars
    AUTOWARE_TARGET_ARCH: aarch64
    AUTOWARE_TOOLCHAIN_FILE_PATH: $CI_PROJECT_DIR/ros/cross_toolchain.cmake
    AUTOWARE_SYSROOT: /sysroot/${AUTOWARE_CROSS_TARGET_PLATFORM}

.build_cross_script: &build_cross_script
  script:
    - apt-get update && apt-get install -y python3-vcstool git build-essential
    - mkdir src
    - vcs validate < $VCS_FILE
    - vcs import src < $VCS_FILE
    - source ${AUTOWARE_SYSROOT}/opt/ros/${ROS_DISTRO}/setup.bash
    - colcon build
        --merge-install
        --packages-skip citysim
        --cmake-args
        -DCMAKE_TOOLCHAIN_FILE=${AUTOWARE_TOOLCHAIN_FILE_PATH}
        -DCMAKE_SYSTEM_PROCESSOR=${AUTOWARE_TARGET_ARCH}
        -DCMAKE_PREFIX_PATH="${CI_PROJECT_DIR}/install;${AUTOWARE_SYSROOT}/opt/ros/${ROS_DISTRO}"
        -DCMAKE_FIND_ROOT_PATH=${CI_PROJECT_DIR}/install

build_melodic:
  stage: build
  image: autoware/autoware:bleedingedge-melodic-base
  variables:
    ROS_DISTRO: melodic
  <<: *build_common

build_melodic_cuda:
  stage: build
  image: autoware/autoware:bleedingedge-melodic-base-cuda
  <<: *build_common

build_melodic_cross:
  stage: build
  image: autoware/build:${AUTOWARE_CROSS_TARGET_PLATFORM}-melodic-bleedingedge
  variables:
    ROS_DISTRO: melodic
    <<: *build_cross_vars
  <<: *build_cross_script
